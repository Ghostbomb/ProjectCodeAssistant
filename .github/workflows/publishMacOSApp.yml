name: Build and Publish macOS Application

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: macOS-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Determine next version
      id: determine_version
      run: |
        # Get the latest tag
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))

        # Determine the next version number
        if [ -z "$latest_tag" ]; then
          # No tags found, use initial version
          next_version="0.0.1"
        else
          # Use semver to determine the next version
          next_version=$(npx semver -i patch $latest_tag)
        fi

        # Set the next version as an output
        echo "::set-output name=next_version::$next_version"

    - name: Create tag
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "GitHub Actions"

        git tag ${{ steps.determine_version.outputs.next_version }}

        git push origin ${{ steps.determine_version.outputs.next_version }}

    - name: Build project
      run: |
        xcodebuild \
          -project ProjectCodeAssistant.xcodeproj \
          -scheme ProjectCodeAssistant \
          -configuration Release \
          -destination generic/platform=OSX \
          build

    - name: Publish release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ProjectCodeAssistant.app
        asset_name: ProjectCodeAssistant-${{ steps.determine_version.outputs.next_version }}.app
        asset_content_type: application/octet-stream
